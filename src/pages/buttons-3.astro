---
import Layout from "../layouts/Layout.astro"
---
<Layout title="buttons">
<div class="h-screen flex flex-col justify-center items-center">
    <h2 class="font-bold my-3 ">This is a test button</h2>
    <button class="styledButton px-4 py-2 bg-gradient-to-r from-[#3887F7] to-[#65A5FF] via-[#246AEC] text-white font-semibold rounded-lg shadow-md hover:shadow-lg focus:outline-none focus:ring-2 focus:ring-primary-500">
        Se Connecter
      </button>
    </div>

<div class="col-span-1 flex items-center justify-between space-x-2">
	<div class="border-animation relative p-[1px] rounded flex-1 self-stretch overflow-hidden flex items-center justify-center before:top-1/2 before:left-1/2 before:-translate-x-1/2 before:-translate-y-1/2 before:aspect-square before:w-full before:absolute before:bg-" aria-hidden="true">
		<button class="relative flex flex-1 cursor-text items-center justify-between self-stretch rounded bg-primaryDark px-2 text-secondaryLight transition hover:border-dividerDark hover:bg-primaryLight hover:text-secondary focus-visible:border-dividerDark focus-visible:bg-primaryLight focus-visible:text-secondary overflow-hidden">
			<span class="inline-flex flex-1 items-center"><svg viewBox="0 0 24 24" width="1.2em" height="1.2em" class="svg-icons mr-2"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><circle cx="11" cy="11" r="8"></circle><path d="m21 21l-4.3-4.3"></path></g></svg><span class="flex flex-1">Try 
			<div class="ml-1 relative">
				<span data-index="0" class="truncate"> "Share request" </span>
			</div>
		    </span>
		</span>
			<span class="flex space-x-1"><kbd class="shortcut-key">Ctrl</kbd><kbd class="shortcut-key">K</kbd></span>
		</button>
	</div>
</div>

</Layout>

<style>
    .styledButton {
      position: relative;
      overflow: hidden;
      z-index: 1;
      background: none;
      color: white;
      transition: box-shadow 0.3s ease, transform 0.3s ease;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .styledButton::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: -1;
      background-image: linear-gradient(to right, #3887F7, #65A5FF, #246AEC);
      opacity: 0.7; 
      transition: opacity 0.3s ease;
    }
    
    .styledButton:hover::before {
      opacity: 1;
    }
    
    .styledButton:hover {
      box-shadow: 0 8px 12px rgba(0, 0, 0, 0.2);
    }

/* halo mooving */
.border-animation::before {
  content: '';
  background: conic-gradient(
    from 0deg,
    transparent 0deg,
    rgb(63, 63, 70) 60deg,
    transparent 120deg
  );
  animation: rotate 2s linear infinite;
}

@keyframes rotate {
  from {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  to {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}
    </style>
